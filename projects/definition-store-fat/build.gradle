import groovy.xml.XmlUtil

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5.1/userguide/java_library_plugin.html
 */
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    jcenter()
}

group = 'com.github.hmcts.rse-cft-lib'
version = 'DEV-SNAPSHOT'

configurations {
    bundler {
        transitive = false
        attributes {
            attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_API))
        }
    }
}

java {
    withSourcesJar()
}

dependencies {
    // Bring in the ccd projects via Gradle's dependency substitution
    bundler 'uk.gov.hmcts.ccd.definition:application'
    bundler 'uk.gov.hmcts.ccd.definition:domain'
    bundler 'uk.gov.hmcts.ccd.definition:elastic-search-support'
    bundler 'uk.gov.hmcts.ccd.definition:excel-importer'
    bundler 'uk.gov.hmcts.ccd.definition:repository'
    bundler 'uk.gov.hmcts.ccd.definition:rest-api'
}

shadowJar {
    configurations = [project.configurations.bundler]
    // Remove the default 'all' suffix from the jar name for POM compatibility.
    archiveClassifier.set(null)
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            publication.artifact(project.tasks.sourcesJar)
        }
    }
}

def b = gradle.includedBuild('ccd-definition-store-api')
def t = b.task(':application:generatePomFileForMavenJavaPublication')

// TODO - a cleaner way
task doPublish(type:Copy, dependsOn: [t, tasks.publishShadowPublicationToMavenLocal] ) {
    from new File(b.projectDir, "application/build/publications/mavenJava/pom-default.xml")
    def dest = new File(repositories.mavenLocal().getUrl().path, "com/github/hmcts/rse-cft-lib/definition-store-fat/${project.version}")
    into dest
    rename { f ->
        "definition-store-fat-${project.version}.pom"
    }
    doLast {
        def xmlFile = new File(dest, "definition-store-fat-${project.version}.pom")
        def xml = new XmlParser().parse(xmlFile)
        xml.groupId.replaceNode {
            groupId('com.github.hmcts.rse-cft-lib')
        }
        xml.artifactId.replaceNode {
            artifactId('definition-store-fat')
        }
        xmlFile.text = XmlUtil.serialize(xml)
    }
}
