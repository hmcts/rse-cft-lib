package validationrules.sscs;
import uk.gov.hmcts.reform.roleassignment.domain.model.Assignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Classification
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType
import uk.gov.hmcts.reform.roleassignment.domain.model.ExistingRoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Case;
import function uk.gov.hmcts.reform.roleassignment.domain.service.common.ValidationModelService.logMsg;
import uk.gov.hmcts.reform.roleassignment.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.FeatureFlagEnum;
import uk.gov.hmcts.reform.roleassignment.util.ValidationUtil;
import java.time.ZonedDateTime;
import java.time.temporal.ChronoUnit;
import uk.gov.hmcts.reform.roleassignment.domain.model.CaseAllocatorApproval;

/*
 * SSCS "hearing-judge" case validation rule.
 */

rule "sscs_hearing_judge_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("hearing-judge"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("judge", "fee-paid-judge"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_hearing_judge_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_hearing_judge_create_case_roles");
end;

/*
 * SSCS "tribunal-member-1" case validation rule.
 */

rule "sscs_tribunal_member_1_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("tribunal-member-1"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("fee-paid-medical", "medical", "fee-paid-disability", "fee-paid-financial", "fee-paid-tribunal-member"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_tribunal_member_1_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_tribunal_member_1_create_case_roles");
end;


/*
 * SSCS "tribunal-member-2" case validation rule.
 */

rule "sscs_tribunal_member_2_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("tribunal-member-2"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("fee-paid-medical", "medical", "fee-paid-disability", "fee-paid-financial", "fee-paid-tribunal-member"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_tribunal_member_2_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_tribunal_member_2_create_case_roles");
end;


 /*
  * SSCS "tribunal-member-3" case validation rule.
  */

 rule "sscs_tribunal_member_3_create_case_roles"
 when
     $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
     $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("tribunal-member-3"))
          ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("fee-paid-medical", "medical", "fee-paid-disability", "fee-paid-financial", "fee-paid-tribunal-member"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
 then
     $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
     $ca.getRoleAssignment().log("Stage 1 approved : sscs_tribunal_member_3_create_case_roles");
     update($ca.getRoleAssignment());
     logMsg("Rule : sscs_tribunal_member_3_create_case_roles");
 end;


/*
 * SSCS "appraiser-1" case validation rule.
 */

rule "sscs_appraiser_1_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("appraiser-1"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("judge", "fee-paid-judge", "fee-paid-medical", "medical", "fee-paid-disability", "fee-paid-financial"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_appraiser_1_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_appraiser_1_create_case_roles");
end;


/*
 * SSCS "panel-appraiser-2" case validation rule.
 */

rule "sscs_appraiser_2_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("appraiser-2"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("judge", "fee-paid-judge", "fee-paid-medical", "medical", "fee-paid-disability", "fee-paid-financial"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_appraiser_2_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_appraiser_2_create_case_roles");
end;


/*
 * SSCS "interloc-judge" case validation rule.
 */

rule "sscs_interloc_judge_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("interloc-judge"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("judge", "fee-paid-judge"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_interloc_judge_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_interloc_judge_create_case_roles");
end;


/*
 * SSCS "post-hearing-judge" case validation rule.
 */

rule "sscs_post_hearing_judge_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName in ("post-hearing-judge"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("judge"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_post_hearing_judge_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_post_hearing_judge_create_case_roles");
end
