package validationrules.privatelaw;
import uk.gov.hmcts.reform.roleassignment.domain.model.Assignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Classification
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType
import uk.gov.hmcts.reform.roleassignment.domain.model.ExistingRoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Case;
import function uk.gov.hmcts.reform.roleassignment.domain.service.common.ValidationModelService.logMsg;
import uk.gov.hmcts.reform.roleassignment.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.FeatureFlagEnum;
import uk.gov.hmcts.reform.roleassignment.util.ValidationUtil;
import java.time.ZonedDateTime;
import java.time.temporal.ChronoUnit;
import uk.gov.hmcts.reform.roleassignment.domain.model.CaseAllocatorApproval;

/*
 * PRIVATELAW "allocated_legal_adviser" case validation rule.
 */

rule "privatelaw_allocated_legal_adviser_create_case_roles"
when
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "PRIVATELAW",
                 roleAssignment.attributes["caseType"].asText() == "PRLAPPS",
                 roleAssignment.roleName in ("allocated-legal-adviser"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("tribunal-caseworker"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "PRIVATELAW")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : privatelaw_allocated_legal_adviser_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : privatelaw_allocated_legal_adviser_create_case_roles");
end;

/*
 * PRIVATELAW "allocated-ctsc-caseworker" case validation rule.
 */

rule "privatelaw_allocated_ctsc_caseworker_create_case_roles"
when
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "PRIVATELAW",
                 roleAssignment.attributes["caseType"].asText() == "PRLAPPS",
                 roleAssignment.classification == Classification.RESTRICTED,
                 roleAssignment.roleName in ("allocated-ctsc-caseworker"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("ctsc", "ctsc-team-leader"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "PRIVATELAW")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : privatelaw_allocated_ctsc_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : privatelaw_allocated_ctsc_caseworker_create_case_roles");
end;

/*
 * PRIVATELAW "allocated-admin-caseworker" case validation rule.
 */

rule "privatelaw_allocated_admin_caseworker_create_case_roles"
when
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "PRIVATELAW",
                 roleAssignment.attributes["caseType"].asText() == "PRLAPPS",
                 roleAssignment.classification == Classification.RESTRICTED,
                 roleAssignment.roleName in ("allocated-admin-caseworker"))
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("hearing-centre-admin", "hearing-centre-team-leader"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "PRIVATELAW")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : privatelaw_allocated_admin_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : privatelaw_allocated_admin_caseworker_create_case_roles");
end;
