package validationrules.core;
import uk.gov.hmcts.reform.roleassignment.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType;
import function uk.gov.hmcts.reform.roleassignment.domain.service.common.ValidationModelService.logMsg;
import uk.gov.hmcts.reform.roleassignment.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.FeatureFlagEnum;

/*
  * Rule to validate the creation of professional organisational roles.
  * Note: this is the initial validation stage, after this rule the
  * `load_role_config_patterns` & `validate_role_assignment_against_patterns`
  * rules are run to validate the role assignment against the json files.
  */
rule "prm_create_org_role"
when
    $f : FeatureFlag(status && flagName == FeatureFlagEnum.GA_PRM_1_0.getValue())
    $rq: Request(
             clientId == "am_org_role_mapping_service",
             process == "professional-organisational-role-mapping",
             reference != null,
             replaceExisting == true)
    $ra: RoleAssignment(
             status == Status.CREATE_REQUESTED,
             roleType == RoleType.ORGANISATION,
             roleCategory == RoleCategory.PROFESSIONAL)
then
    $ra.setStatus(Status.CREATE_APPROVED);
    $ra.log("Create approved : prm_create_org_role");
    update($ra);
    logMsg("Rule : prm_create_org_role");
end;

/*
  * Delete rule to remove professional organisational roles.
  * This rule is required when `"replaceExisting": true`
  * is passed as part of the role request.
  */
rule "prm_delete_org_role"
when
    $rq: Request(clientId == "am_org_role_mapping_service")
    $ra: RoleAssignment(
             status == Status.DELETE_REQUESTED,
             roleType == RoleType.ORGANISATION,
             roleCategory == RoleCategory.PROFESSIONAL)
then
    $ra.setStatus(Status.DELETE_APPROVED);
    $ra.log("Delete approved : prm_delete_org_role");
    update($ra);
    logMsg("Rule : prm_delete_org_role");
end;
