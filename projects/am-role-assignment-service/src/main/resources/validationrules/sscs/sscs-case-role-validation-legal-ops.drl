package validationrules.sscs;
import uk.gov.hmcts.reform.roleassignment.domain.model.Assignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType
import uk.gov.hmcts.reform.roleassignment.domain.model.ExistingRoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.CaseAllocatorApproval;
import uk.gov.hmcts.reform.roleassignment.domain.model.Case;
import function uk.gov.hmcts.reform.roleassignment.domain.service.common.ValidationModelService.logMsg;
import uk.gov.hmcts.reform.roleassignment.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.FeatureFlagEnum;
import uk.gov.hmcts.reform.roleassignment.util.ValidationUtil;

import java.time.ZonedDateTime;
import java.time.temporal.ChronoUnit;

/*
 * SSCS "registrar" case validation rule.
 */

rule "sscs_registrar_create_case_roles"
when
    $f:  FeatureFlag(status && flagName == FeatureFlagEnum.SSCS_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName == "registrar")
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("registrar"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_registrar_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_registrar_create_case_roles");
end;


/*
 * SSCS "allocated-tribunal-caseworker" case validation rule.
 */
rule "sscs_allocated_tribunal_caseworker_create_case_roles"
when
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName == "allocated-tribunal-caseworker")
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("tribunal-caseworker"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_allocated_tribunal_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_allocated_tribunal_caseworker_create_case_roles");
end;


/*
 * SSCS "allocated-admin-caseworker" case validation rule.
 */
rule "sscs_allocated_admin_caseworker_create_case_roles"
when
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName == "allocated-admin-caseworker")
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("hearing-centre-admin", "regional-centre-admin", "clerk"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_allocated_admin_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_allocated_admin_caseworker_create_case_roles");
end;


/*
 * SSCS "allocated-ctsc-caseworker" case validation rule.
 */
rule "sscs_allocated_ctsc_caseworker_create_case_roles"
when
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "SSCS",
                 roleAssignment.attributes["caseType"].asText() == "Benefit",
                 roleAssignment.roleName == "allocated-ctsc-caseworker")
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("ctsc"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "SSCS")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : sscs_allocated_ctsc_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : sscs_allocated_ctsc_caseworker_create_case_roles");
end
